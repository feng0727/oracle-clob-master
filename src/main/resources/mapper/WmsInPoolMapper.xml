<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gblfy.mapper.WmsInPoolMapper">
    <resultMap id="BaseResultMap" type="com.gblfy.entity.WmsInPool">
        <id column="POOL_PK_NO" jdbcType="DECIMAL" property="poolPkNo" />
        <result column="BIG_DATA" property="bigData" jdbcType="CLOB" javaType = "java.lang.String"/>
        <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
        <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>

    <sql id="Base_Column_List">
        POOL_PK_NO,BIG_DATA,CREATE_TIME,UPDATE_TIME
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.math.BigDecimal" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from WMS_IN_POOL
        where POOL_PK_NO = #{poolPkNo,jdbcType=DECIMAL}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal">
        delete from WMS_IN_POOL
        where POOL_PK_NO = #{poolPkNo,jdbcType=DECIMAL}
    </delete>

    <insert id="insert" parameterType="com.gblfy.entity.WmsInPool">
        <selectKey resultType="Decimal" keyProperty="poolPkNo" order="BEFORE">
            SELECT nvl(max(POOL_PK_NO),0)+1 from WMS_IN_POOL
        </selectKey>
        insert into WMS_IN_POOL (POOL_PK_NO,BIG_DATA,CREATE_TIME,UPDATE_TIME)
        values (
        #{poolPkNo,jdbcType=DECIMAL},#{bigData,jdbcType=CLOB},
        #{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <insert id="insertSelective" parameterType="com.gblfy.entity.WmsInPool">
        insert into WMS_IN_POOL
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="poolPkNo != null">
                POOL_PK_NO,
            </if>
            <if test="bigData != null">
                BIG_DATA,
            </if>
            <if test="createTime != null">
                CREATE_TIME,
            </if>
            <if test="updateTime != null">
                UPDATE_TIME,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="poolPkNo != null">
                #{poolPkNo,jdbcType=DECIMAL},
            </if>
            <if test="bigData != null">
                #{bigData,jdbcType=CLOB},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.gblfy.entity.WmsInPool">
        update WMS_IN_POOL
        <set>
            <if test="bigData != null">
                BIG_DATA = #{bigData,jdbcType=CLOB},
            </if>
            <if test="createDate != null">
                UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where POOL_PK_NO = #{poolPkNo,jdbcType=DECIMAL}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.gblfy.entity.WmsInPool">
        update WMS_IN_POOL
        set BIG_DATA = #{bigDdata,jdbcType=CLOB},
            UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
        where POOL_PK_NO = #{poolPkNo,jdbcType=DECIMAL}
    </update>

    <insert id="batchInsertWmsInPool" parameterType="com.gblfy.entity.WmsInPool">
        insert into WMS_IN_POOL(
        POOL_PK_NO,BIG_DATA,CREATE_TIME,UPDATE_TIME)
        select SEQ_POOL_PK_NO.NEXTVAL, A.* from(
        <foreach collection="wmsInPools" item="item" index="index" separator="UNION ALL">
            SELECT
            #{item.bigData,jdbcType=CLOB},
            #{item.createTime,jdbcType=TIMESTAMP},
            #{item.updateTime,jdbcType=TIMESTAMP}
            from dual
        </foreach>
        ) A
    </insert>


    <!--不需要主键则增插入-->
    <insert id="batchInsertWmsInPool2" parameterType="com.gblfy.entity.WmsInPool"  useGeneratedKeys="false">
        insert into WMS_IN_POOL(
        POOL_PK_NO,BIG_DATA,CREATE_TIME,UPDATE_TIME)
        select   A.* from(
        <foreach collection="wmsInPools" item="item" index="index" separator="UNION ALL">
            SELECT
            #{item.poolPkNo},
            #{item.bigData,jdbcType=CLOB},
            #{item.createTime,jdbcType=TIMESTAMP},
            #{item.updateTime,jdbcType=TIMESTAMP}
            from dual
        </foreach>
        ) A
    </insert>

    <!--批量修改-->
    <update id="batchUpdateData" parameterType="com.gblfy.entity.WmsInPool">
        <foreach collection="sfpchList" item="item" open="begin" close=";end;" separator=";">
            update WMS_IN_POOL
            <set>
              <if test="item.bigData!= null and item.bigData != ''">
                    BIG_DATA=#{item.bigData}
             </if>
             <!--   <if test="CREATE_TIME!= null and CREATE_TIME != ''">
                    CREATE_TIME=#{item.createTime},
                </if>-->

            </set>
            where POOL_PK_NO = #{item.poolPkNo}
        </foreach>
    </update>

    <select id="batchQuery" parameterType="java.util.List" resultMap="BaseResultMap">
        select  <include refid="Base_Column_List" />
            from WMS_IN_POOL where  POOL_PK_NO in
        <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
           #{item}
        </foreach>

    </select>

    <insert id="insertFolder" parameterType="com.gblfy.entity.WmsInPool">
        insert into WMS_IN_POOL(POOL_PK_NO,BIG_DATA,CREATE_TIME,UPDATE_TIME)
        values(#{wmsInPool.poolPkNo}, #{wmsInPool.bigData},#{wmsInPool.createTime},#{wmsInPool.updateTime})
    </insert>

    <update id="updateBatchFolder" parameterType="com.gblfy.entity.WmsInPool">
        update  WMS_IN_POOL  set BIG_DATA=#{wmsInPool.bigData} where POOL_PK_NO=#{wmsInPool.poolPkNo}
    </update>

    <select id="matchDgree" parameterType="com.gblfy.entity.Policy" resultType="com.gblfy.entity.Policy">
        SELECT ID,NAME,SUM(
        <trim suffixOverrides="+">
        <foreach collection="content" item="str" index="index" separator=" ">
            CASE WHEN NAME like  '%河南%' THEN 1 ELSE 0 END +
        </foreach>
        </trim>      ) AS MATCHDGREE
        FROM POLICY_ANA GROUP BY  NAME,ID  ORDER BY MATCHDGREE DESC
    </select>
    <!--分页查询格式1-->
    <!--SELECT * FROM(SELECT A.*, ROWNUM RN from (SELECT ID,NAME,SUM( CASE WHEN NAME like '%河南%' THEN 1 ELSE 0 END + CASE WHEN NAME like '%新能源%' THEN 1 ELSE 0 END + CASE WHEN NAME like '%方城%' THEN 1 ELSE 0 END )AS MATCHDGREE FROM POLICY_ANA GROUP BY NAME,ID ORDER BY MATCHDGREE DESC)  A WHERE ROWNUM <= 10)  WHERE RN >= 1 -->
    <!--分页查询格式2-->
    <!--SELECT * FROM(SELECT A.*, ROWNUM RN from (SELECT ID,NAME,SUM( CASE WHEN NAME like '%河南%' THEN 1 ELSE 0 END + CASE WHEN NAME like '%新能源%' THEN 1 ELSE 0 END + CASE WHEN NAME like '%方城%' THEN 1 ELSE 0 END )AS MATCHDGREE FROM POLICY_ANA GROUP BY NAME,ID ORDER BY MATCHDGREE DESC)  A) WHERE RN BETWEEN 1 AND 10 -->

</mapper>
